# tasks/init-control-plane.yml
---

- name: Pre pull required images
  ansible.builtin.shell: |
    kubeadm config images pull
  changed_when: False

- name: Run kubeadm init
  ansible.builtin.shell: |
    kubeadm init \
      --config={{ k8s_cluster_kubelet_config_root_dir }}/kubeadm-config.yml \
      --ignore-preflight-errors={{ k8s_cluster_ignore_preflight_errors }} \
        > /tmp/kubeadm.log 2>&1
  changed_when: False
  when: k8s_cluster_initial_master | bool == true

- name: Ensure .kube directory exists
  ansible.builtin.file:
    path: ~/.kube
    state: directory
    mode: 0755

- name: Symlink the kubectl admin.conf to ~/.kube/conf
  ansible.builtin.file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link
    mode: 0644

# https://github.com/flannel-io/flannel
- name: Configure Flannel networking
  ansible.builtin.shell: |
    kubectl apply -f {{ k8s_cluster_flannel_apply }} > /tmp/flannel.log 2>&1
  changed_when: False
  when: k8s_cluster_initial_master | bool == true

- name: Post init tasks
  block:
    - name: Get kubeadm token to join other nodes
      ansible.builtin.shell: |
        kubeadm token create --ttl 24h
      register: kubernetes_join_command_result
      when: k8s_cluster_initial_master | bool == true
      changed_when: False

    - name: Set kubeadm token variable for other nodes
      ansible.builtin.set_fact:
        k8s_cluster_join_token: "{{ kubernetes_join_command_result.stdout }}"
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{ ansible_play_hosts }}"

    - name: Get root CA certificate hash
      ansible.builtin.shell: |
        set -o pipefail \
        && openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt \
          | openssl rsa -pubin -outform der 2>/dev/null \
          | openssl dgst -sha256 -hex \
          | sed 's/^.* //'
      args:
        executable: /usr/bin/bash
      register: get_root_ca_command_result
      when: k8s_cluster_initial_master | bool == true
      changed_when: False

    - name: Set root CA certificate hash variable for other nodes
      ansible.builtin.set_fact:
        k8s_cluster_root_ca_hash: "{{ get_root_ca_command_result.stdout }}"
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{ ansible_play_hosts }}"

    - name: Set API server ip address
      ansible.builtin.set_fact:
        k8s_cluster_api_server_ip: "{{ hostvars[inventory_hostname]['ansible_facts']['default_ipv4']['address'] }}"
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{ ansible_play_hosts }}"
