# tasks/control-plane-init.yml
---

- name: Create kubelet root directory
  ansible.builtin.file:
    path: "{{ k8s_cluster_kubelet_config_root_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy initial kubeadm template
  ansible.builtin.template:
    src: "kubeadm-config.yml.j2"
    dest: "{{ k8s_cluster_kubelet_config_root_dir }}/kubeadm-config.yml"
    owner: root
    group: root
    mode: 0640

- name: Pre pull required images
  ansible.builtin.shell: |
    kubeadm config images pull
  changed_when: False

- name: Run kubeadm init
  ansible.builtin.shell: |
    kubeadm init \
      --config={{ k8s_cluster_kubelet_config_root_dir }}/kubeadm-config.yml \
      --ignore-preflight-errors="{{ k8s_cluster_init_ignore_preflight_errors }}" \
        > /tmp/kubeadm.log 2>&1
  changed_when: False

- name: Ensure .kube directory exists
  ansible.builtin.file:
    path: ~/.kube
    state: directory
    mode: 0755

- name: Symlink the kubectl admin.conf to ~/.kube/conf
  ansible.builtin.file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link
    mode: 0644

# https://github.com/flannel-io/flannel
- name: Configure Flannel networking
  ansible.builtin.shell: |
    kubectl apply -f {{ k8s_cluster_flannel_apply }} > /tmp/flannel.log 2>&1
  changed_when: False

- name: Get the kubeadm join command from the Kubernetes master
  ansible.builtin.shell: |
    kubeadm token create --ttl 1h --print-join-command
  register: kubernetes_join_command_result
  delegate_to: "{{ groups['control_plane'][0] }}"
  changed_when: False

- name: Set the kubeadm join command for masters and worker nodes
  ansible.builtin.set_fact:
    k8s_cluster_join_command: "{{ kubernetes_join_command_result.stdout | default('') }}"
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['control_plane'] + groups['workers'] }}"
  when: "'workers' in groups"
# try move to loop instead of with_items

- name: Set the kubeadm join command for masters and nodes
  ansible.builtin.set_fact:
    k8s_cluster_join_command: "{{ kubernetes_join_command_result.stdout | default('') }}"
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['control_plane'] }}"
  when: "not 'workers' in groups"
