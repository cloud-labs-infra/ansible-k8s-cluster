# tasks/join-node.yml
---

- name: Prepare additional master
  when: k8s_cluster_node_type == 'master'
  block:
    - name: Create control plane configuration and certs directory
      ansible.builtin.file:
        path: "{{ k8s_cluster_kubelet_config_root_dir }}/pki/etcd"
        state: directory
        owner: root
        group: root
        mode: 0640

    - name: Write control plane configuration and certs
      ansible.builtin.copy:
        dest: "{{ item.item }}"
        content: "{{ item.content | b64decode }}"
        mode: 0600
      loop: "{{ k8s_cluster_control_plane_files.results }}"
      loop_control:
        label: "{{ item.item }}"

- name: Copy initial kubeadm template
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ k8s_cluster_kubelet_config_root_dir }}/{{ item }}"
    owner: root
    group: root
    mode: 0640
  loop: ["kubeadm-join-config.yml"]

- name: Join node to cluster
  ansible.builtin.shell: |
    kubeadm join \
      --config={{ k8s_cluster_kubelet_config_root_dir }}/kubeadm-join-config.yml \
        > /tmp/join.log 2>&1
  changed_when: false

- name: Check nodes until ready
  ansible.builtin.shell: |
    kubectl get node {{ ansible_hostname }} \
      --kubeconfig=/etc/kubernetes/admin.conf -o json | jq -Mr '.status.conditions[4].status'
  register: kubectl_response
  changed_when: false
  delegate_to: "{{ k8s_cluster_init_main_node_hostname }}"
  until: kubectl_response.stdout == "True"
  retries: 48
  delay: 5
