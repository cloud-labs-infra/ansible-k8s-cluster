# tasks/configure.yml
---

# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
- name: Install kubeadm, kubelet and kubectl
  block:
    - name: Install prerequisites
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - jq
        state: present
        update_cache: yes

    - name: Set proper version for apt repo
      ansible.builtin.set_fact:
        k8s_cluster_apt_kubernetes_version: "{{ k8s_cluster_kubernetes_version | regex_replace('^(v\\d\\.\\d\\d)\\.\\d$', 'v\\1') }}"

    - name: Debug
      ansible.builtin.debug:
        var: k8s_cluster_apt_kubernetes_version

    - name: Add Kubernetes apt key
      ansible.builtin.apt_key:
        url: "{{ k8s_cluster_apt_key_url }}"
        keyring: "{{ k8s_cluster_apt_key_file }}"

    - name: Add Kubernetes apt repository
      ansible.builtin.apt_repository:
        repo: "{{ k8s_cluster_apt_repository }}"
        state: present
        #filename: kubernetes
        update_cache: true

    - name: Install Kubernetes components
      ansible.builtin.apt:
        name:
          - kubelet={{ k8s_cluster_kube_version }}
          - kubeadm={{ k8s_cluster_kube_version }}
          - kubectl={{ k8s_cluster_kube_version }}
        allow_unauthenticated: yes
        update_cache: yes

    - name: Pin versions
      ansible.builtin.dpkg_selections:
        selection: hold
        name: "{{ item }}"
      loop:
        - kubelet
        - kubeadm
        - kubectl

- name: Check kubelet status
  block:
    - name: Collect facts about systemd services
      ansible.builtin.service_facts:
      register: services_state

    - name: Debug
      ansible.builtin.debug:
        var: services_state.ansible_facts.services['kubelet.service']

# https://kubernetes.io/docs/setup/production-environment/container-runtimes/
- name: Configure system
  block:
    - name: Load required kernel modules on boot
      ansible.builtin.copy:
        src: modules-load.d_k8s.conf
        dest: "/etc/modules-load.d/k8s.conf"
        owner: root
        group: root
        mode: 0640

    - name: Load kernel modules
      community.general.modprobe:
        name: "{{ item }}"
      loop:
        - overlay
        - br_netfilter

    - name: Configure sysctl
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: '1'
        sysctl_file: /etc/sysctl.d/k8s.conf
        sysctl_set: yes
        state: present
        reload: yes
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
        - net.ipv4.ip_forward

    - name: Create kubelet root directory
      ansible.builtin.file:
        path: "{{ k8s_cluster_kubelet_config_root_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0755
